1.冒泡排序    时间复杂度: O(N^2) 空间复杂度: O(1) 稳定性：稳定
private static void bubbleSort(int[] arr) {
        for (int i = 0; i < arr.length; i++) {
            for (int j = 0; j < arr.length - i -1; j++) {   // 这里说明为什么需要-1
                if (arr[j] > arr[j + 1]) {
                    int temp = arr[j];
                    arr[j] = arr[j + 1];
                    arr[j + 1] = temp;
                }
            }
        }
    }
时间复杂度: O(N^2)
空间复杂度: O(1)
稳定性：稳定
2.选择排序   时间复杂度: O(N^2) 空间复杂度: O(1) 稳定性：不稳定
public static void selectionSort(int[] nums) {

    if (nums == null || nums.length < 2) {
        return;
    }

    for(int i = 0; i < nums.length - 1; i++) {
        for(int j = i + 1; j < nums.length; j++) {
            if(nums[i] > nums[j]) {
                swap(nums, i, j);
            }
        }
    }

}

3.插入排序
