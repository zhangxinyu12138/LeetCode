root = [10,5,-3,3,2,null,11,3,-2,null,1], sum = 8

      10
     /  \
    5   -3
   / \    \
  3   2   11
 / \   \
3  -2   1

Return 3. The paths that sum to 8 are:

1.  5 -> 3
2.  5 -> 2 -> 1
3. -3 -> 11

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public int pathSum(TreeNode root, int sum) {
        if(root==null) return 0;
        //路径和不一定从根节点开始，每一个节点都可能是开始节点
        return dfs(root,sum)+pathSum(root.left,sum)+pathSum(root.right,sum);
    }
    public int dfs(TreeNode root,int sum){
        if(root==null){
            return 0;
        }
        int count=0;
        //路径一定是自顶向下，故采用先序遍历
        if(sum==root.val){
            count++;
        }
        count+=dfs(root.left,sum-root.val);
        count+=dfs(root.right,sum-root.val);
        return count;
    }
}
