1. leetcode 448
Given an array of integers where 1 ≤ a[i] ≤ n (n = size of array), some elements appear twice and others appear once.
Find all the elements of [1, n] inclusive that do not appear in this array. with O(1) space and in O(n) runtime.
Example:
Input:
[4,3,2,7,8,2,3,1]
Output:
[5,6]

将元素以其为下标获取数组中的值，如果对应元素大于0，则取反，这样没有出现过的元素为下标的元素依然为正。
class Solution {
    public List<Integer> findDisappearedNumbers(int[] nums) {
        List<Integer> res=new ArrayList<>();
        for(int i=0;i<nums.length;i++){
            int value=Math.abs(nums[i])-1;
            if(nums[value]>0){
                nums[value]=-nums[value];
            }
        }
        for(int i=0;i<nums.length;i++){
            if(nums[i]>0){
                res.add(i+1);
            }
        }
        return res;
    }
}

